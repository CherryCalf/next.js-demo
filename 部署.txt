要解决 Docker 中构建 JDK 17 镜像时遇到的网络问题（如 `from` 指令超时），可以尝试以下方法：

### 1. 配置 Docker 使用公司代理

如果公司网络需要代理来访问外部资源，您可以配置 Docker 使用该代理。具体步骤如下：

#### 配置 Docker 守护进程的代理设置

1. **创建或编辑 Docker 守护进程配置文件**，路径为 `/etc/systemd/system/docker.service.d/http-proxy.conf`（如果使用 systemd 管理 Docker 服务）：

```sh
sudo mkdir -p /etc/systemd/system/docker.service.d
sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf
```

2. **在文件中添加以下内容**，并替换 `http://proxy.example.com:8080` 为公司的代理地址：

```ini
[Service]
Environment="HTTP_PROXY=http://proxy.example.com:8080/"
Environment="HTTPS_PROXY=http://proxy.example.com:8080/"
Environment="NO_PROXY=localhost,127.0.0.1"
```

3. **重新加载并重启 Docker 服务**：

```sh
sudo systemctl daemon-reload
sudo systemctl restart docker
```

### 2. 使用本地镜像或缓存构建

如果无法访问外部网络，可以使用本地已有的基础镜像或缓存来构建 Docker 镜像。

#### 导入本地基础镜像

1. **从其他能访问外网的机器上下载基础镜像**，并保存为 tar 文件：

```sh
docker pull openjdk:17-jdk-slim
docker save -o openjdk-17-jdk-slim.tar openjdk:17-jdk-slim
```

2. **将 tar 文件复制到目标机器**，并加载镜像：

```sh
docker load -i openjdk-17-jdk-slim.tar
```

#### 构建 Docker 镜像

1. **创建 Dockerfile**：

```Dockerfile
# 使用本地已有的 OpenJDK 17 基础镜像
FROM openjdk:17-jdk-slim

# 设置工作目录
WORKDIR /app

# 将当前目录下的所有文件复制到工作目录中
COPY . .

# 编译 Java 应用程序（假设有一个名为 Main.java 的文件）
RUN javac Main.java

# 指定容器启动时运行的命令
CMD ["java", "Main"]
```

2. **构建 Docker 镜像**：

```sh
docker build -t my-java-app .
```

### 总结

通过配置 Docker 使用公司代理或使用本地基础镜像，您可以解决由于网络限制导致的 Docker 镜像构建问题。根据您的具体情况选择合适的方法。







ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
