大连东软信息学院
毕业设计（论文）


 







学    院：	       计算机与软件学院           
专    业：	    计算机科学与技术（专升本）                                
学生姓名：	           黄福祺                      
学生学号：	         23201013001                  
指导教师：	       安璐   宋晓慧  王帅                   
导师职称：	       助教   老师                   
完成日期：	        2025年4月21日         





大连东软信息学院
Dalian Neusoft University of Information 
基于Vue的“芷彤”旅行社管理系统的 
设计与实现

摘  要 
在旅行社业务蓬勃发展的今天，旅行社的服务也在不断提升。为了满足旅行社和客户的多元需求，我着手构建了一个集旅游资讯、客户管理、预订服务和商城功能于一体的综合性管理系统，名为“芷彤”。这一切都借助了现代前端框架Vue。
在这个项目中，我首先进行了详尽的需求分析，明确了系统所需的功能模块：员工管理、客户管理、行程管理、订单管理、旅行进度管理。前端采用Vue Router实现页面路由，使用Vue的双向绑定、组件通信、状态管理等技术完成页面的绘制，极大地提高了代码的可复用性和可维护性，并采用Axios库进行HTTP请求，与后端API高效交互。后端则采用了Spring Boot、MyBatis、七牛云OSS，确保了系统的稳定性和高效的数据处理能力与多媒体文件存储的能力。同时，选择MySQL数据库存储数据，确保其安全性和稳定性。
通过这次毕业设计，我不仅加深了对Vue框架、Spring Boot和MyBatis的理解和应用，还利用了对象存储云服务。锻炼了系统设计和项目管理的能力，为未来的职业发展奠定了坚实的基础。这段经历既充实又具有挑战性，我为自己能在这样一个项目中不断进步而感到自豪。

关键词： Vue.js ，Spring Boot，旅游后台管理系统，前端设计，后端设计，
OSS云服务 
Design and Implementation of 
"Zhitong" Travel Agency Management System
 Based on  Vue

Abstract
Today, as the travel agency business is booming, the services of travel agencies are also constantly improving. In order to meet the diverse needs of travel agencies and customers, I set out to build a comprehensive management system called "Zhitong" that integrates travel information, customer management, reservation services and mall functions. All of this is done with the help of the modern front-end framework Vue.
In this project, I first conducted a detailed demand analysis and clarified the functional modules required by the system: employee management, customer management, itinerary management, order management, and travel progress management. The front end uses Vue Router to implement page routing, and uses Vue's two-way binding, component communication, state management and other technologies to complete page drawing, which greatly improves the reusability and maintainability of the code, and uses the Axios library for HTTP requests to interact efficiently with the back-end API. The back end uses Spring Boot, MyBatis, and Qiniu Cloud OSS to ensure the stability of the system and the ability to efficiently process data and store multimedia files. At the same time, the MySQL database is selected to store data to ensure its security and stability.
Through this graduation project, I not only deepened my understanding and application of the Vue framework, Spring Boot and MyBatis, but also took advantage of object storage cloud services. I have exercised my ability in system design and project management, laying a solid foundation for my future career development. This experience is both fulfilling and challenging, and I am proud of myself for being able to make continuous progress in such a project.

Key words:  Vue.js ，Spring Boot，Travel Agency Management System， 
OSS Cloud Service
 
目  录 
摘  要	I
ABSTRACT	II
第1章　绪论	1
1.1研究背景与意义	1
1.2国内外现状	2
1.3研究目标	3
第2章 需求分析	4
2.1功能性需求	4
2.1.1用例概述	4
2.2 系统运行开发环境	5
2.3 系统可行性分析	6
2.3.1 技术可行性分析	6
2.3.2 社会可行性分析	6
2.3.3 环境可行性分析	6
第3章　系统设计	7
3.1系统功能模块设计	7
3.2 页面原型	8
3.2.1首页原型	8
3.2.2栏目页原型图	8
3.3 JSON接口设计	14
3.3.1 用户接口设计	14
3.3.2 角色接口设计	14
3.3.3 客户接口设计	15
3.3.4 咨询接口设计	16
3.3.5 行程单接口设计	17
3.3.6 订单接口设计	18
第4章　系统实现	20
4.1首页功能实现	20
4.2宠物商品订单功能实现	22
4.2.1 用户下订单功能实现	22
4.2.2 管理员管理商品订单功能实现	24
4.3宠物服务功能实现	24
4.4个人中心功能实现	24
4.5关键技术难点与解决方案	24
4.6关键算法（可选）	24
4.7编码规范（可选）	24
第5章　系统测试	25
5.1功能测试	25
5.2非功能测试	26
5.3测试总结	27
第6章　结论与展望	28
参考文献	29
致  谢	30
 
第1章　绪论 
1.1研究背景与意义
说明：描述项目产生的背景。研究的重要性。写企业课题的同学需体现企业背景。
（描述现有系统存在问题，与同类产品进行比较）
随着旅游业的快速发展和市场竞争的日益激烈，旅行社在提升服务质量和管理效率方面面临着巨大的挑战。传统的旅行社管理系统通常存在功能单一、操作繁琐、数据安全性不足等问题，无法满足现代旅行社对于信息化和智能化管理的需求。同时，客户对于旅游服务的个性化需求不断增加，旅行社需要一个能够全面、高效地管理客户信息和旅游资源的系统。
本研究旨在设计并实现一个基于Vue.js、Spring Boot、MyBatis和MySQL技术栈的“芷彤”旅行社后台管理系统，以解决现有系统的不足，提升旅行社的管理效率和客户满意度。本系统具有高内聚低耦合的特点，通过模块化和组件化的设计理念，提高了系统的可维护性和可扩展性。
目前市场上存在多款类似的软件，它们各有特色，但也存在一些共性和差异。以下是对几款典型软件的对比分析：
（1）功能单一：
特点：传统的旅行社管理系统通常仅涵盖基本的客户信息管理和订单管理，缺乏综合性的功能模块，无法满足现代旅行社的多元化需求。
对比：本系统集成了旅游信息展示、员工管理、客户管理、行程管理、订单管理、旅行进度管理多个功能模块，提供一站式解决方案。
（2）操作繁琐：
特点：许多传统系统的用户界面设计不够友好，操作流程复杂，增加了员工的工作负担，降低了工作效率。
对比：基于Vue.js的前端框架，系统界面设计简洁美观，操作流程流畅，提高了用户体验。
（3）数据安全性不足：
特点：在数据存储和传输过程中，传统系统常常缺乏必要的安全措施，容易导致客户数据泄露和丢失。
对比：采用Spring Boot和MyBatis作为后端技术栈，结合MySQL数据库，确保了数据的稳定性和安全性。
（4）缺乏实时数据更新：
特点：传统系统难以实现实时数据的更新和同步，导致信息滞后，影响管理决策的及时性。
对比：利用Axios库进行高效的HTTP请求，与后端API进行实时数据交互，确保系统数据的及时更新和同步。
综上所述，与其他同类型软件相比，本系统具有以下优势：功能全面、用户友好、数据安全性高、高内聚低耦合以及实时数据更新。不仅提升了旅行社的管理效率和客户满意度，还为未来的职业发展奠定了坚实的基础。
1.2国内外现状
	
国内现状：
1.	智慧旅游建设：国内学者和企业越来越关注智慧旅游的发展，利用人工智能、大数据等技术提升旅游服务的智能化水平。
2.	旅游电子商务平台：国内的旅游电子商务平台在功能设计、用户体验优化以及商业模式创新方面取得了显著成果。
3.	信息安全与隐私保护：随着旅游信息系统的复杂性增加，信息安全与隐私保护成为研究的重要方向。
国外现状
1.	旅游预订系统：国外学者在旅游预订系统方面进行了深入研究，特别是在线旅游预订平台的设计与优化。
2.	旅游目的地管理系统：国外研究者们关注如何利用信息技术提升旅游目的地的管理效率和服务质量。
3.	旅游资源管理：国外研究者们在旅游资源的合理规划与管理方面进行了大量研究，如利用物联网技术实现旅游资源的智能化监测与管理。
未来趋势
1.	智慧旅游：旅行社后台管理系统将朝着更加智能化、个性化和服务化的方向发展。
2.	跨界融合：旅行社后台管理系统将与其他行业如零售、娱乐等进一步融合，提供更加丰富的旅游体验。
3.	生态旅游：旅行社后台管理系统将更加注重环境保护和可持续发展的功能。
1.3研究目标 

本研究的目标是设计并实现一个综合性的旅行社后台管理系统，旨在提升旅行社的管理效率和客户满意度。通过简化操作流程和设计友好的用户界面，使管理员、客服、行程定制师和地陪能够方便快捷地完成各自的工作任务。
系统集成了员工管理、客户管理、行程管理、订单管理和旅行进度管理等功能模块，确保信息共享和实时更新，提升整体运营效率。系统方便员工高效完成工作，同时提升客户服务体验，使旅行社的管理更加智能化和信息化。

 

第2章 需求分析
2.1功能性需求

员工管理
•	员工信息维护：管理员可以添加、编辑和删除员工信息，包括姓名、职位、联系方式等。
•	权限管理：管理员可以设置和修改员工的权限，确保不同角色只能访问和操作其职责范围内的功能。
客户管理
•	客户信息维护：客服可以添加、编辑和删除客户信息，包括姓名、联系方式、旅行偏好等。
•	客户咨询处理：客服可以记录和处理客户的咨询和问题，提高客户服务的响应速度。
行程管理
•	行程规划：行程定制师可以为客户制定详细的旅行规划，包括行程安排、景点推荐、交通和住宿信息等。
•	行程维护：行程定制师可以编辑和更新行程信息，确保客户的旅行计划及时调整和优化。
订单管理
•	订单创建与管理：系统可以生成和管理客户的订单，包括旅游套餐、服务预订和商品购买等。
•	订单状态跟踪：员工可以查看和更新订单状态，确保订单的及时处理和完成。
旅行进度管理
•	实时事件维护：地陪可以记录和管理客户在旅行过程中的实时事件，如突发情况处理、行程变更等。
•	旅行进度跟踪：系统可以实时跟踪客户的旅行进度，提供及时的信息更新和反馈。
数据安全与备份
•	数据加密与保护：系统对客户和员工的敏感信息进行加密保护，防止数据泄露和篡改。
•	定期备份与恢复：系统定期备份数据，并提供数据恢复功能，确保数据的稳定性和安全性。
报表与统计
•	业务报表生成：系统可以生成各类业务报表，包括客户统计、订单统计、财务报表等，帮助管理层进行决策分析。
•	数据分析与可视化：系统提供数据分析和可视化功能，帮助用户直观地了解业务运营情况。


2.1.1用例概述

在图2.1高层用例图中抽取了满足用户基本业务需求的基本用例。
 
图2.1 高层用例图
用例摘要描述如表2.1所示。
表2.1 用例摘要描述
用例标识（UC）	用例名称	摘要描述
1	登录	使用系统前的身份验证。
2	注册	由管理员创建员工登录账号。
3	管理员工信息	管理员可以对员工信息进行增、删、改、查操作，管理员工的权限和角色。
4	管理客户信息	客服可以对客户信息进行增、改、查操作，处理客户咨询和需求。
5	管理行程信息	行程定制师可以制定和维护客户的旅行规划，包括行程安排、景点推荐、交通和住宿信息等。
6	管理订单信息	系统生成和管理客户的订单，包括开始行程，结束行程，并跟踪订单状态。
7	管理旅行进度信息	地陪可以记录和管理客户在旅行过程中的实时事件，如突发情况处理、行程变更等，并实时跟踪客户的旅行进度。
2.2 系统运行开发环境 
本网站的相关开发与运行环境如表2.3所示。
表2.3 网站开发与运行环境
序号	项目/类别	开发环境	运行环境
1	操作系统	Windows11	Windows11
2	编程语言	Java8, JavaScript,vue	Windows11
3	开发工具	IntelliJ IDEA2024	
4	版本控制	Git	

2.3 系统可行性分析
2.3.1 技术可行性分析
本软件系统采用Vue.js、Vue Router、Axios、Spring Boot、pagehelper、fastjson2
等相关技术组件支持，硬件环境为intel core i7-10875H、2*8G内存、960G固态硬盘、Realtek PCIe 10/100/1000Mbps网卡，软件环境为windows11、node.js v18.20.4、npm 10.7.0、java 1.8.0_411、mysql8.0.36、IDEA2024.1、apache-maven-3.6.2。
	“芷彤”旅行社后台管理系统采用Vue.js、Vue Router、Axios、Spring Boot、PageHelper和Fastjson2等关键技术组件，硬件环境为高性能处理器和大容量存储设备，软件环境包括Windows 11、Node.js、Java、MySQL等。这些技术和硬件选择通过模块化和组件化设计，提高了系统的开发效率、性能和可扩展性，能够有效提升旅行社的管理效率和客户满意度。
2.3.2 社会可行性分析
1. 满足用户需求
•	提升管理效率：系统的实现将大幅提升旅行社的管理效率，从而提高员工的工作效率，减少人为失误。
•	改善客户体验：通过更高效的后台管理，旅行社可以提供更加及时和准确的服务，从而提升客户满意度和忠诚度。
2. 促进旅游业发展
•	行业竞争力：引入先进的管理系统，有助于旅行社在竞争激烈的旅游市场中脱颖而出，吸引更多客户。
•	服务质量提高：系统化的管理能够提高旅行社的服务质量，推动整个旅游行业的发展和进步。
2.3.3 环境可行性分析
	综上所诉开发环境，“芷彤”旅行社后台管理系统在技术上是可行的。高性能的硬件配置、稳定的操作系统和强大的开发工具以及现代化的开发框架和数据库，能够确保系统的高效开发和稳定运行，从而提升旅行社的管理效率和客户满意度。
 

第3章　系统设计
3.1系统功能模块设计
表3.1 XX系统功能列表
NO.	一级分类	三级分类	说明
				
1	首页	数据统计	统计系统中未开始订单数、行程中订单数、已完成订单数	
2		折线图	统计客服每月接收咨询数量	
3		饼状图	统计客户来源、定制师完成订单占比	
4		柱状图	统计近12个月订单量统计	
5	用户管理	导出	将系统内的数据导出到excel中	
6		新增	新增员工账号	
7		修改	修改员工信息	
8		删除	删除员工账号	
9		查询	按条件显示特定员工	
10	角色管理	导出	将系统内的数据导出到excel中	
11		新增	新增系统角色	
12		修改	修改角色权限	
13		删除	删除系统角色	
14		查询	按条件显示特定角色	
15	客户管理	导出	将系统内的数据导出到excel中	
16		新增	新增客户信息	
17		修改	修改客服信息	
18		查询	按条件显示特定客户	
19	咨询管理	导出	将系统内的数据导出到excel中	
20		新增	新增咨询信息	
21		修改	修改咨询信息	
22		查询	按条件显示特定咨询	
23	行程单管理	导出	将系统内的数据导出到excel中	
24		退回	将行程单退回到咨询管理	
25		修改	修改行程内容	
26		查询	按条件显示特定行程单	
27	订单管理	导出	将系统内的数据导出到excel中	
28		修改	修改订单状态	
29		查询	按条件显示特定订单	
30	行程库	新增	新增行程库	
31		修改	修改行程库内容	
32		删除	删除行程库	
33		查询	按条件显示特定行程库	

3.2 页面原型
3.2.1首页原型
首页页面布局简单清晰，以展示旅行社经营情况为目的。首页原型如3.2所示。
 
首页原型图3.2
3.2.2栏目页原型图
 
用户管理原型图
 
新增用户原型图
 
角色管理原型图
 
新增角色原型图
 
关联用户原型图
 
取消关联用户原型图
 
客户管理原型图
 
新增客户原型图
 
咨询管理原型图
 
分配定制师原型图
 
新增咨询原型图
 
行程单管理原型图
 
新增行程单原型图
 
订单管理原型图
 
行程库原型图
 
新增行程库原型图

3.3 JSON接口设计
3.3.1 用户接口设计
表 3.2首页内容加载接口设计
功能说明	查询用户列表
URL地址	http://localhost/dev-api/ly_user/ly_user/list?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/ly_user/ly_user/list?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
            "roleIds": null,
            "roleIdsStr": "100",
            "userId": 5,
            "userName": "12512565",
            "nickName": "陈一鸣",
            "email": "cym@cym.com",
            "phonenumber": "15667664570",
            "status": 0,
            "password": "$2a$10$0w1F/eISvnOZ3pyLjrbnOetom1vkj/Aa/5tsIK4YYZnhHUWXEeYpS",
            "roleId": 0,
            "roleName": "地陪",
            "delFlag": 0
        }
    ],
    "code": 200,
    "msg": "查询成功"
}
3.3.2 角色接口设计
功能说明	查询角色列表
URL地址	http://localhost/dev-api/system/role/list?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/system/role/list?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
           "createBy": null,
            "createTime": "2024-11-06 09:52:08",
            "updateBy": null,
            "updateTime": null,
            "remark": "超级管理员",
            "roleId": 1,
            "roleName": "超级管理员",
            "roleKey": "admin",
            "roleSort": 1,
            "dataScope": "1",
            "menuCheckStrictly": true,
            "deptCheckStrictly": true,
            "status": "0",
            "delFlag": "0",
            "flag": false,
            "menuIds": null,
            "deptIds": null,
            "permissions": null,
            "admin": true
        }
    ],
    "code": 200,
    "msg": "查询成功"
}

3.3.3 客户接口设计
功能说明	查询客户列表
URL地址	http://localhost/dev-api/ly_customer/ly_customer/listWithOrder?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/ly_customer/ly_customer/listWithOrder?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
            "customerId": 10045,
            "serial": null,
            "customerName": "312",
            "phone": "1231231231",
            "customerSource": 2,
            "orderCount": 0,
            "itineraryCount": 0,
            "remark": null
        }
    ],
    "code": 200,
    "msg": "查询成功"
}

3.3.4 咨询接口设计
功能说明	查询咨询列表
URL地址	http://localhost/dev-api/ly_consult/ly_consult/list?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/ly_consult/ly_consult/list?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
           "customerId": 0,
            "consultId": 10372,
            "consultNum": "13791957",
            "customerName": "Michael",
            "phone": "17707777777",
            "travelNum": "3",
            "destination": "12123",
            "departureTime": "2024-12-16 00:00:00",
            "revisionTime": "2024-12-10,2024-12-23",
            "planDay": "1",
            "budget": 123123,
            "remark": null,
            "customizerUserId": 0,
            "customizerName": null,
            "csUserId": null,
            "status": 2,
            "peerName": "cherry 321123",
            "peerPhone": "18640701417 321"
        }
    ],
    "code": 200,
    "msg": "查询成功"
}

3.3.5 行程单接口设计
功能说明	查询行程单列表
URL地址	http://localhost/dev-api/ly_itinerary/ly_itinerary/list?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/ly_itinerary/ly_itinerary/list?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
           "itineraryId": 20101,
            "itineraryNum": "1733144330415269",
            "consultNum": "5102512731",
            "travelNum": "3",
            "goTime": null,
            "planDay": "23",
            "travelFees": null,
            "serviceFees": null,
            "status": 3,
            "consultId": 9994,
            "customerNum": null,
            "customerId": 5409,
            "customerName": "futsy",
            "phone": "05023967524",
            "customizerUserId": 9,
            "customizerName": "哈哈",
            "guidesUserId": null,
            "guidesName": null,
            "csUserId": null,
        }
    ],
    "code": 200,
    "msg": "查询成功"
}

3.3.6 订单接口设计
功能说明	查询订单列表
URL地址	http://localhost/dev-api/ly_order/ly_order/list?pageNum={1}&pageSize={10}
请求方式	GET
参数说明	字段名	是否必须	类型	描述
	分页	否	num	分页查询
请求示例	http://localhost/dev-api/ly_order/ly_order/list?pageNum=1&pageSize=10
返回参数类型	JSON类型
参数说明	返回示例
totle：总条数
row：单条内容
code：状态码
msg：查询消息	{
    "total": 15,
    "rows": [
        {
          "orderId": 30031,
            "serial": null,
            "customerId": null,
            "customerName": "Fcepq",
            "orderNum": "21868812",
            "guidesName": "陈一鸣",
            "customizerName": "DZS",
            "orderAmount": "7835",
            "phone": "38710561149",
            "status": "0",
            "itineraryId": 73,
            "itineraryNum": null,
            "guidesUserId": null,
            "customizerUserId": null,
            "pic": null,
            "csUserId": null
        }
    ],
    "code": 200,
    "msg": "查询成功"
}

 
第4章　系统实现
说明：每个核心功能为一节。
描述核心业务用例的实现。用文字+实现效果+代码的方式，把每一层之间的相互调用，使用什么样的关键代码做以解释。
要点：要体现核心业务功能，而非每个系统都有的登录、注册等通用功能。
4.1首页功能实现
宠物联盟微信小程序端的首页如图4.1所示。本界面的布局遵循用户友好和直观易用的设计原则，旨在为用户提供快速访问宠物相关功能和内容的途径。界面包括顶部区域、中部内容区和底部区域三大部分。
顶部区域通过广告轮播图展示最新的活动、优惠或推荐内容，吸引用户点击。
中部区域通过一组图标形式排列的常用功能按钮，便于用户快速导航至特定页面。
底部区域提供了5个主要功能入口，包括“首页”、“商品”、“服务”、“购物车”、“我的”这几项。
同时为了优化用户体验，内容区域支持滚动加载，当用户滚动到页面底部时，会自动加载更多内容。
 
图4.1微信小程序首页
首页的页面布局代码如下，本页面使用VantUI的宫格组件，宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航。本页面的服务与工具区域使用了宫格布局，用四列显示。
<view class="q">服务与工具</view>
<view class="r">
<van-grid column-num="4">
  <van-grid-item  
  wx:for="{{ List2 }}" 
  wx:key="index"
  icon="{{item.image2}}" 
  text="{{item.name2}}" 
  />
</van-grid></view>
</view>
首页的页面处理函数代码如下，在生命周期函数onLoad()中进行商品数据的初始化，通过onBuyNumChange()实现用户修改购买数量的功能。
/**
  *生命周期函数--监听页面加载
 */
onLoad: function (options) {
  const address = {}
  if (options.name && options.phone && options.city)
  {
  address.name = options.name
  address.phone = options.phone
  address.city = options.city
  }
  console.log(options);
  this.setData({
  goods: goodsData[options.goodsIndex],
  address,
 goodsIndex: options.goodsIndex
  })
  },
  /**
  *修改购买数量事件
 */
onBuyNumChange(event) {
  this.setData({
  buyNum: event.detail
  })
  },

4.2宠物商品订单功能实现
4.2.1 用户下订单功能实现
用户通过访问微信小程序的宠物商城页面就可以查询到宠物商品列表和门店信息，在宠物商品列表页面可以浏览宠物商品分类，然后选择心仪的宠物商品，加入购物车，在购物车中，点击去结算就可以完成结算操作。
宠物商品列表页面如图4.3所示。页面使用了Vant-UI组件库中的侧边导航sidebar组件和Tab标签页组件。商品列表信息存储在JSON文件中，通过<wx:for>控制属性进行绑定。
 
图4.3 宠物商品列表界面
选择上图中的商品加入购物车，购物车页面如图4.4所示。本页面使用了Vant UI的商品导航GoodsAction组件，用于为商品相关操作提供便捷交互。
 
图4.4 购物车界面









4.2.2 管理员管理商品订单功能实现
……
 

4.3宠物服务功能实现
……
4.4个人中心功能实现
……

4.5关键技术难点与解决方案
说明：如需要嵌入代码，其格式如下（嵌入代码量不要连续超过一页）：

要点：
	要体现系统中的关键技术点

int shmctl (int shmid,int cmd,struct shmid_ds *buf)
{   …
   int iResult = 0;
    …
   while (cmd) {
      
   }
   return iResult;
}
注意：不要有超过一页的连续代码，如果超过一页，须在代码中插入2-3行以上的文字描述。
4.6关键算法（可选）
	基于算法实现的论文，在此处将论文中用到的算法和实现效果进行说明。	
4.7编码规范（可选）

 
第5章　系统测试
说明：这里需要文字描述测试计划，可以包含各阶段使用到的测试策略、测试环境的搭建等。
【举例】
票务管理系统的测试本着及早接入的原则，因此早在需求阶段测试人员就对需求的覆盖度、数据模型的正确性都进行了相应的验证测试，在系统开发过程中进行了单元测试，在集成阶段进行了集成测试，在整个系统开发完成后又针对功能性方面进行了系统测试。由于篇幅的限制，下面主要围绕功能测试用例、性能测试和测试总结三个方面进行说明。
5.1功能测试
说明：对核心业务进行功能测试。

要点：
	需要体现用例编号、用例描述、测试的步骤和测试数据及预期结果，按照示例表格去写即可
	核心业务功能的测试用例。

【举例】
本系统对分组模块、问卷模块两个核心模块进行了功能测试，测试设计如下所示。
（1）分组模块功能测试
分组模块测试包括添加联系人，新增分组，添加联系人到分组。分组模块测试用例如表5.1-5.3所示。
表5.1 添加联系人功能测试用例
用例
编号	测试用例描述	操作过程及数据	预期结果
addCon_01	正确填写联系人信息	按照系统要求填写联系人名称，年龄，邮箱，电话，地址等信息点击“确定”	系统提示添加成功
addCon_02	年龄不超过正常范围	输入的年龄大于100，其余选项正常填写	系统提示联系人年龄有误
addCon_03	年龄不小于正常范围	输入的年龄小于10，其余选项正常填写	系统提示联系人年龄有误
addCon_04	必填项填写不完全	用户没有填写完全系统要求的必须信息	系统会根据实际情况提示用户哪项没有填写
addCon_05	重新填写联系人信息	点击“重置”	页面回到初始状态





表5.2 新增分组功能测试用例
用例
编号	测试用例描述	操作过程及数据	预期结果
addGrp_01	正确填写分组名称	按照系统要求分组名称点击“确定”	系统提示添加成功
addGrp_02	分组名称重复	输入已存在分组名称	系统在输入分组名称后添加递增数字
addGrp_03	分组名超过指定长度	输入名称长度超过20字	系统会提示分组名称长度不合法
addGrp_04	分组名长度为0	输入名称长度为0	系统会提示分组名称长度不合法
表5.3 添加联系人到分组功能测试用例
用例编号	测试用例描述	操作过程及数据	预期结果
instGrp_01	正确添加联系人到指定分组	在默认联系人列表中选择联系人，点击移动到分组，选择分组，提交请求	系统提示添加成功
instGrp_02	联系人已存在于该分组	在默认联系人列表中选择联系人，点击移动到分组，选择分组，提交请求	系统提示该分组已存在此联系人
（2）问卷模块功能测试
问卷模块测试包括新建问卷，修改问卷基本信息，添加问题，修改问题，添加问题选项，修改问题选项。测试用例设计如表5.4-5.8所示。
格式同上。
5.2非功能测试
以下测试根据自己项目实际情况选择并组织文字，不要直接使用举例中的文字：

要点：
	和非功能需求要对应
【举例】
兼容性测试用例如表5.9、表5.10所示。
表5.9 手机型号兼容性测试用例
测试用例名称	测试手机型号
兼容性_001	华为 Mate 9
兼容性_002	华为 Mate 10
兼容性_003	小米 6
表5.10 浏览器兼容性测试用例
测试用例名称	浏览器版本
兼容性_001	IE 10
兼容性_002	Chrome 62.0.3202.94
兼容性_003	Firefox 57.0.0.6525
性能测试用例如表5.11所示。
表5.11 兼容性测试用例
场景	并发数量	测试点
登录	500	登录的响应时间
	1000	
	2300	
	2400	
查找课程	500	查找的响应时间
	1000	
	2300	查找的响应时间
	2400	
选课	500	500人集合选课的负载情况
	1000	1000人集合选课的负载情况
5.3测试总结
说明：对测试过程中运行的测试用例、发现的缺陷等进行统计。并针对出现的现象进行分析和总结。同时说明经过测试并修改缺陷后系统现在的质量如何。大致可以从如下几个方面进行考虑：
测试用例对功能性及非功能性的测试点的覆盖。例如测试用例一共***个，其中功能性用例***个，性能用例***个，兼容性用例***个，后台***个，可用性）***个等，并对核心测试用例进行展示，具体格式参考下面的范例。
【举例】
测试用例共设计了***个，执行了***个，通过***个，其他状态的个多少个，执行过程消耗时间的或有波折的要特别说明，并说明原因，以充分体现测试设计和执行的工作量。
测过程试中一共发现缺陷***个，都是哪些方面的缺陷，现在缺陷的状态如何等，可以辅以各种分析图表来展示。 


第6章　结论与展望
说明：总结本项目的优缺点并做出改进计划。给出运行与维护、运营方面的计划。
注意：本章是对项目的总结，而不是个人毕设体会，一定不要写成个人体会！
本章篇幅最低要求：至少要在1页或者大半页以上，不能只有半页内容！
 
参考文献
参考文献总体样本：
[1] 张炯．Unix网络编程实用技术与实例分析[M]，清华大学出版社，2002，33-50．
[2] 徐千祥．Linux C函数库参考手册[M]，中国青年出版社，2002，55-67．
[3] 张青等．Oracle9i中文版基础教程[M]，清华大学出版社，2003，105-130．
[4] 软件设计模式[EB/OL]，www.itisedu.com/软件设计模式.htm，2004．
[5] 许育诚．软件测试与质量管理[D]，海事大学，2004．
[6] 景新梅．软件产业原动力[J]，中国计算机报，2005，45(7)，32-33．
[7] 赵克佳，赵慧．UNIX程序设计教程[M]，清华大学出版社，2001，78-89．
[8] 陈绍英，戴金龙．软件测试案例分析[J]，测试员，2005，32(8)，23-25．
[9] Wendy Boggs，Michael Boggs．UML与Rational Rose 2002从入门到精通[M]，电子工业出版社，2002，90-101．
[10] Sun Microsystems.Inc. JavaTM 2 SDK, Standard Edition Documentation Version 1.4.1 [EB/OL]，Sun Microsystems.Inc，2002．

注意：参考文献不少于10篇，学术期刊（[J]类期刊）不少于7篇，至少有1篇外文文献，近三年的参考文献不少于文献总数的1/2 。


 
致  谢
说明：在致谢中，主要表达对导师和其他相关人员的感谢之意以及结合整体的大学学习，对整个毕业设计（论文）进行总体性、概括性总结，表达出设计（论文）的思路、学习收获、对未来进一步学习的设想。对此，仍要实事求是，过分的颂扬反而会带来消极影响。有企业导师的同学在致谢里要体现对企业导师的致谢。
举例：
在整个毕业设计的各个阶段我都得到了xxx老师、xxx老师和xxx高级工程师的悉心指导和耐心帮助。
（以下略）一般来说，至少要书写1/3页内容。







 
大连东软信息学院 
毕业设计（论文）原创承诺书
1、本人承诺：所提交的毕业设计（论文）是认真学习理解学校的《毕业设计（论文）工作规范》后，在教师的指导下，独立地完成了任务书中规定的内容，不弄虚作假，不抄袭别人的工作内容。
2、本人在毕业设计（论文）中引用他人的观点和研究成果，均在文中加以注释或以参考文献形式列出，对本文的研究工作做出重要贡献的个人和集体均已在文中注明。
3、在毕业设计（论文）中对侵犯任何方面知识产权的行为，由本人承担相应的法律责任。
4、本人完全了解学校关于保存、使用毕业设计（论文）的规定，即：按照学校要求提交论文和相关材料的印刷本和电子版本；同意学校保留毕业设计（论文）的复印件和电子版本，允许被查阅和借阅；学校可以采用影印、缩印或其他复制手段保存毕业设计（论文），可以公布其中的全部或部分内容。
5、本人完全了解《毕业（设计）论文工作规范》关于“学生毕业设计（论文）出现购买、他人代写、或者抄袭、剽窃等作假情形的，取消其学位申请资格；已经获得学历证书、学位证书的，学校依法撤销其学历、学位，并注销学历、学位证书” 的规定内容。
6、本人完全了解《学生手册》中关于在“毕业设计（论文）等环节中被认定抄袭他人成果者”不授予学士学位，并且“毕业学年因违纪受处分影响学位的学生不授予学士学位，并且无学士学位申请资格”的规定内容。
以上承诺的法律结果、不能正常毕业及其他不可预见的后果由学生本人承担！


学生本人签字：               

2025 年 4 月 21 日


